this question is same as Minimum number of deletions and insertions to convert string a to b
here we can  insert and deletion on same string which we want to convert in another string
but in this question we are only delete a charactar either first or second string so. 
we can make both string same.

so operation is similar 
l1+l2-(longest common subsequence)





//code 


class Solution {
public:
    
    int minDistance(string s1, string s2) {
     
	 
	 //row
	 int n=s1.size();
	 //colomn
	 int m=s2.size();
 
	 
	vector<vector<int>>dp(n+1,vector<int>(m+1,0));
	

for(int i=0;i<=n;i++)dp[i][0]=0;
for(int j=0;j<=m;j++)dp[0][j]=0;


	
for(int i=1;i<=n;i++){
    for(int j=1;j<=m;j++){
       
       if(s1[i-1]==s2[j-1]){
           dp[i][j]=1+dp[i-1][j-1];
       } 
       
       else 
       dp[i][j]=max(dp[i-1][j],dp[i][j-1]);
        
        
    }
}
	  

return (m+n)-2*dp[n][m];	  
            
    }
    
    
    
};
